services:
  identitydb:
    user: "10001"
    container_name: identitydb
    build: ./DB/
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=A&VeryComplex123Password
    volumes:
      - identityDb.data:/var/opt/mssql/data
      - identityDb.log:/var/opt/mssql/log
      - identityDb.secrets:/var/opt/mssql/secrets
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "A&VeryComplex123Password" -Q "SELECT 1"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  identity:
    container_name: identity
    build:
      context: .
      dockerfile: /IdentityService/Dockerfile
    env_file:
      - ./Environment/security.env
      - ./Environment/asp.env
    volumes:
      - security:/security/keys
      - security:/app/Certs
    ports:
      - "5238:8080"
    depends_on:
      identitydb:
        condition: service_healthy

  librarydb:
    user: "10001"
    container_name: librarydb
    build: ./DB/
    ports:
      - "1435:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=A&VeryComplex123Password
    volumes:
      - libraryDb.data:/var/opt/mssql/data
      - libraryDb.log:/var/opt/mssql/log
      - libraryDb.secrets:/var/opt/mssql/secrets
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "A&VeryComplex123Password" -Q "SELECT 1"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  library:
    container_name: library
    build:
      context: .
      dockerfile: /LibraryService/Dockerfile
    env_file:
      - ./Environment/security.env
      - ./Environment/asp.env
    volumes:
      - security:/security/keys
      - security:/app/Certs
      - library.data:/app/Data
    ports:
      - "5280:8080"
    depends_on:
      librarydb:
        condition: service_healthy

volumes:
  security:
  identityDb.data:
  identityDb.log:
  identityDb.secrets:
  libraryDb.data:
  libraryDb.log:
  libraryDb.secrets:
  library.data:
